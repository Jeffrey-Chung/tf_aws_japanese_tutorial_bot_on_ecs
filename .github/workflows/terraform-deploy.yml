name: Deployment - Terraform

on:
  workflow_dispatch:
    inputs:
      action_type:
          description: "Type of action you want to take (i.e. 'build' or 'destroy')"
          type: choice
          required: true
          options:
            - build
            - destroy

env:
   AWS_REGION: ap-southeast-2
   # Will add role name once IAM role defined in AWS console
   IAM_ROLE: "arn:aws:iam::663790350014:role/GitHubActions-japanese-language-bot"
   TF_VERSION: 1.3.7
   ECR_REGISTRY: tf-aws-japanese-tutorial-bot-ecr-repo
permissions: 
   id-token: write
   contents: read

jobs:
  tf-aws-language-discord-bot-deploy:
    name: 'tf-aws-language-discord-bot-deploy'
    runs-on: ubuntu-latest
    if: inputs.action_type == 'build'
    steps:
      - name: Check out this repository
        uses: actions/checkout@v3

      - name: Set AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ env.IAM_ROLE }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - uses: hashicorp/setup-terraform@v2

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan
        continue-on-error: false
      
      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve
        continue-on-error: false
      
      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ env.ECR_REGISTRY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

  tf-aws-language-discord-bot-destroy:
    name: 'tf-aws-language-discord-bot-destroy'
    runs-on: ubuntu-latest
    if: inputs.action_type == 'destroy'
    steps:
      - name: Check out this repository
        uses: actions/checkout@v3

      - name: Set AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
            role-to-assume: ${{ env.IAM_ROLE }}
            aws-region: ${{ env.AWS_REGION }}

      - uses: hashicorp/setup-terraform@v2

      - name: Terraform init
        id: init
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: terraform plan 
        continue-on-error: false
        
      - name: Terraform Destroy
        id: destroy
        run: terraform destroy -auto-approve
        continue-on-error: false